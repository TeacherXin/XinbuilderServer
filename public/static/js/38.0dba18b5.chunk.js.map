{"version":3,"file":"static/js/38.0dba18b5.chunk.js","mappings":"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","sources":["PageList/index.js","Util/index.js","Store/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Card, Col, Row, Button,Input, message, Modal,Divider  } from 'antd';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './index.css'\r\nimport axios from 'axios';\r\nimport {DeleteOutlined,DatabaseOutlined,FormOutlined} from '@ant-design/icons';\r\nimport Store from '../Store';\r\nconst { Search } = Input\r\n\r\nexport default function PageList() {\r\n\r\n  const navigate  = useNavigate();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [pageList,setPageList] = useState([])\r\n  const [isModalOpen,setIsModalOpen] = useState(false)\r\n  const [pageName,setPageName] = useState('')\r\n  const [searchValue,setSearchValue] = useState('')\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    if(user){\r\n      axios.post(`http://${window.location.hostname}:3003/login/getUser`,{\r\n        username: user.username,\r\n        password: user.password\r\n      }).then(res => {\r\n        if(res.data.data){\r\n          getPageList();\r\n        }else{\r\n          navigate('/login');\r\n        }\r\n      })\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    window.stackIndex = 0;\r\n    window.attributeStack = [];\r\n  },[])\r\n\r\n\r\n  const onSearch = (value) => {\r\n    setSearchValue(value)\r\n  }\r\n\r\n  const getPageList = () => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    axios.post(`http://${window.location.hostname}:3003/pageJson/findAllPage`,{\r\n      username: user.username\r\n    })\r\n    .then(res => {\r\n      setPageList(res.data.data)\r\n    })\r\n    .catch(err => {\r\n      messageApi.open({\r\n        type: 'error',\r\n        content: '获取页面列表失败',\r\n      });\r\n    })\r\n  }\r\n\r\n  const toBuilderPage = (pageId) => {\r\n    return () => {\r\n      Store.dispatch({type:'change',attributeMap:{}})\r\n      navigate('/home',{state: {pageId}});\r\n    }\r\n  }\r\n\r\n  const toShowPage = (pageId) => {\r\n    return () => {\r\n      navigate('/metaRender',{state: {pageId}});\r\n    }\r\n  }\r\n\r\n  const addNewPage = () => {\r\n    setIsModalOpen(true);\r\n    setPageName('')\r\n  }\r\n  \r\n  const handleOk = () => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    axios.post(`http://${window.location.hostname}:3003/pageJson/addPage`,{\r\n      pageName: pageName,\r\n      pageId:'pageInfo_' + new Date().getTime(),\r\n      pageJson: {},\r\n      username: user.username\r\n    })\r\n    .then(res => {\r\n      messageApi.open({\r\n        type: 'success',\r\n        content: '新建页面成功',\r\n      });\r\n      getPageList()\r\n      setIsModalOpen(false)\r\n      Store.dispatch({type:'change',attributeMap:{}})\r\n    })\r\n    .catch(err => {\r\n      messageApi.open({\r\n        type: 'error',\r\n        content: '新建页面失败',\r\n      });\r\n    })\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false)\r\n  }\r\n\r\n  const changePageName = (e) => {\r\n    setPageName(e.target.value)\r\n  }\r\n\r\n  const deletePage = (pageId) => {\r\n    return () => {\r\n      axios.post(`http://${window.location.hostname}:3003/pageJson/deletePage`,{\r\n        pageId\r\n      })\r\n      .then(res => {\r\n        messageApi.open({\r\n          type: 'success',\r\n          content: '删除成功',\r\n        });\r\n        getPageList()\r\n      })\r\n      .catch(err => {\r\n        messageApi.open({\r\n          type: 'error',\r\n          content: '删除失败',\r\n        });\r\n      })\r\n    }\r\n  }\r\n\r\n  const getSearchList = (list) => {\r\n    return (list || []).filter(item => {\r\n      return item.pageName.indexOf(searchValue) > -1\r\n    })\r\n  }\r\n\r\n  const refeshLogin = () => {\r\n    localStorage.removeItem('user');\r\n    navigate('/login')\r\n  }\r\n\r\n  const toXinBuilderDoc = () => {\r\n    window.open('http://localhost:9000/#/Xinbuilder/createPage')\r\n  }\r\n\r\n  const toXinBuilderCom = () => {\r\n    window.open('http://localhost:3000/#/')\r\n  }\r\n\r\n  const toDataBase = () => {\r\n    window.open('http://localhost:3001/#/dataBase')\r\n  }\r\n\r\n  return (\r\n    <div className='PageList'>\r\n      {contextHolder}\r\n      <div className='pageLeft'>\r\n        <div className='leftHeader'>XinBuilder</div>\r\n        <div className='leftDiscribe'>轻量级的低代码平台</div>\r\n        <Divider />\r\n        <Button onClick={toDataBase} size='large' type='link'>构建数据库</Button>\r\n        <DatabaseOutlined />\r\n        <Divider />\r\n        <Button onClick={toXinBuilderCom} size='large' type='link'>自定义组件</Button>\r\n        <FormOutlined />\r\n        <Divider />\r\n      </div>\r\n      <div className='pageRight'>\r\n        <div className='PageHeader'>\r\n          <Search\r\n            style={{ width: 304 }}\r\n            onSearch={onSearch}\r\n          />\r\n          <Button className='pageButton' onClick={addNewPage}>新建页面</Button>\r\n          <div style={{display:'flex',float:'right'}}>\r\n            <Button onClick={toXinBuilderDoc} type='link'>使用文档</Button>\r\n            <Button type='link'>API参考</Button>\r\n            <Button type='link'>生态系统</Button>\r\n            <Button onClick={refeshLogin} type='link'>退出登录</Button>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className='PageBody'>\r\n          <Row style={{width:'100%'}} gutter={16}>\r\n            {\r\n              (getSearchList(pageList) || []).map(item => {\r\n                return <Col style={{marginTop:'10px'}} key={item._id} span={6}>\r\n                  <Card\r\n                    title={<div><span>{item.pageName || '匿名'}</span><DeleteOutlined onClick={deletePage(item.pageId)}style={{float:'right',cursor:'pointer'}} /></div>}\r\n                    bordered={false}\r\n                    headStyle={{fontSize:'14px'}}\r\n                  >\r\n                    <div style={{height:'50px'}}>\r\n                      <Button type='text' onClick={toBuilderPage(item.pageId)}>编辑页面</Button>\r\n                      <Button type='text' onClick={toShowPage(item.pageId)}>预览页面</Button>\r\n                    </div>\r\n                  </Card>\r\n                </Col>\r\n              })\r\n            }\r\n          </Row>\r\n        </div>\r\n      </div>\r\n      <Modal title=\"创建页面\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n          <Input addonBefore=\"页面名称\" value={pageName} onChange={changePageName} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import _ from 'lodash';\nimport Store from '../Store'\nimport axios from 'axios'\nimport { createHashHistory } from 'history'\n\nconst history = createHashHistory();\n\n\nwindow.xinCtx = {}\nwindow.xinComEvent = {}\n\nwindow.proxyAttributeMap = () => {\n  let xinCtx = window.xinCtx;\n  let proxy = setAttributeProxy(xinCtx)\n  window.xinCtx = proxy;\n}\n\nwindow.findNodeByComId = (id,nodeList) => {\n  let node;\n  const dfs = (id,nodeList) => {\n    for(let propName in nodeList){\n      if(propName === id){\n        node = nodeList[propName];\n      }else if(nodeList[propName].childList){\n        dfs(id, nodeList[propName].childList)\n      }\n    }\n  }\n  dfs(id,nodeList)\n  return node;\n}\n\nconst setAttributeProxy = (ctx) => {\n  for(let propName in ctx){\n    if(typeof ctx[propName] === 'object'){\n      ctx[propName] = setAttributeProxy(ctx[propName])\n    }\n  }\n  return new Proxy(ctx,{\n    set(target,property,value,receiver){\n      if(typeof value === 'object'){\n        target[property] = setAttributeProxy(value);\n        Store.dispatch({type: 'change',attributeMap: target,comId: target.comId});\n        return true\n      }else{\n        target[property] = value;\n        Store.dispatch({type: 'change',attributeMap: target,comId:target.comId});\n        return true\n      }\n    },\n    deleteProperty(target,property){\n      delete target[property];\n      Store.dispatch({type: 'change',attributeMap: target,comId:target.comId});\n      return true;\n    }\n  })\n}\n\nwindow.xinComEvent.copyNode = (node) => {\n  const newNode =  _.cloneDeep(node);\n  newNode.comId = newNode.comType + Math.random();\n  if(newNode.childList){\n    const childList = {}\n    Object.keys(newNode.childList).forEach(propName => {\n      const node = window.xinComEvent.copyNode(newNode.childList[propName]);\n      childList[node.comId] = node\n    })\n    newNode.childList = childList\n  }\n  return newNode;\n}\n\nwindow.xinComEvent.addNode = (node,top,left) => {\n  node.style = {\n    left: parseInt(node.style.left) + left + 'px',\n    top: parseInt(node.style.top) + top + 'px',\n    position: 'absolute',\n    zIndex:100\n  }\n  node.comId += (new Date().getTime() + '').slice(6)\n  window.xinCtx[node.comId] = node;\n}\n\nwindow.xinComEvent.toPageById = (pageId) => {\n  history.push('/metaRender',{pageId});\n  window.location.replace(window.location.href)\n}\n\nwindow.xinComEvent.sendAjax = (type,entityCode,params,resCallBack,errCallBack) => {\n  if(type === 'create'){\n    axios.post(`http://${window.location.hostname}:3003/entity/addEntityItem`,{entityParam: params,entityCode})\n    .then(res => {\n      resCallBack(res)\n    })\n    .catch(err => {\n      errCallBack(err)\n    })\n  }else if(type === 'find'){\n    axios.post(`http://${window.location.hostname}:3003/entity/getEntityItem`,{entityParam: params,entityCode})\n    .then(res => {\n      resCallBack(res)\n    })\n    .catch(err => {\n      errCallBack(err)\n    })\n  }\n}","import { configureStore } from '@reduxjs/toolkit'\r\nimport _ from 'lodash'\r\nimport '../Util/index.js'\r\n\r\nconst initialState  = { attributeMap: {} }\r\n\r\nconst setValue = (attributeMap,id,value) => {\r\n  for(let propName in attributeMap){\r\n    if(propName === id){\r\n      return attributeMap[propName] = value;\r\n    }\r\n    if(attributeMap[propName].childList){\r\n      for(let _propName in attributeMap[propName].childList){\r\n        if(_propName === id){\r\n          attributeMap[propName].childList[_propName] = value\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setAttributeStack = (attributeMap) => {\r\n  if(Object.keys(attributeMap) == 0) {\r\n    return;\r\n  }\r\n  let attributeStack = window.attributeStack || [];\r\n  attributeStack.push(attributeMap);\r\n  window.attributeStack = attributeStack;\r\n  window.stackIndex = window.stackIndex ?  window.stackIndex + 1 : attributeStack.length;\r\n}\r\n\r\nfunction attributeMapReducer(state = initialState, action) {\r\n  if (action.type === 'change') {\r\n    if(!action.lineFlag){\r\n      setAttributeStack(action.attributeMap)\r\n    }\r\n    if(action.comId){\r\n      let attributeMap = _.cloneDeep(state.attributeMap);\r\n      setValue(attributeMap,action.comId,action.attributeMap)\r\n      window.xinCtx = _.cloneDeep(attributeMap);\r\n      window.proxyAttributeMap();\r\n      return  {\r\n        ...state,\r\n        attributeMap: attributeMap\r\n      };\r\n    }\r\n\r\n    window.xinCtx = _.cloneDeep(action.attributeMap);\r\n    window.proxyAttributeMap();\r\n    return  {\r\n      ...state,\r\n      attributeMap: _.cloneDeep(action.attributeMap)\r\n    };\r\n  }\r\n  // 返回原来的 state 不变\r\n  return state\r\n}\r\n\r\nexport default configureStore({ \r\n  reducer: attributeMapReducer,\r\n  middleware:getDefaultMiddleware => getDefaultMiddleware({\r\n    //关闭redux序列化检测\r\n    serializableCheck:false\r\n  })\r\n});"],"names":["Search","Input","PageList","navigate","useNavigate","message","messageApi","contextHolder","useState","pageList","setPageList","isModalOpen","setIsModalOpen","pageName","setPageName","searchValue","setSearchValue","useEffect","user","JSON","parse","localStorage","getItem","axios","window","location","hostname","username","password","then","res","data","getPageList","stackIndex","attributeStack","list","catch","err","open","type","content","toBuilderPage","pageId","Store","attributeMap","state","toShowPage","className","Divider","Button","onClick","size","DatabaseOutlined","FormOutlined","style","width","onSearch","value","display","float","removeItem","Row","gutter","filter","item","indexOf","map","Col","marginTop","span","Card","title","DeleteOutlined","cursor","bordered","headStyle","fontSize","height","_id","Modal","onOk","Date","getTime","pageJson","onCancel","addonBefore","onChange","e","target","history","createHashHistory","xinCtx","xinComEvent","proxyAttributeMap","proxy","setAttributeProxy","findNodeByComId","id","nodeList","node","dfs","propName","childList","ctx","Proxy","set","property","receiver","dispatch","comId","deleteProperty","copyNode","newNode","_","comType","Math","random","Object","keys","forEach","addNode","top","left","parseInt","position","zIndex","slice","toPageById","push","replace","href","sendAjax","entityCode","params","resCallBack","errCallBack","entityParam","initialState","setValue","_propName","setAttributeStack","length","configureStore","reducer","action","lineFlag","middleware","getDefaultMiddleware","serializableCheck"],"sourceRoot":""}